(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{220:function(t,e,a){t.exports=a.p+"assets/img/cors-error.8f5afbe2.jpg"},236:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"_5-extras"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-extras"}},[t._v("#")]),t._v(" 5. Extras")]),t._v(" "),s("p",[t._v("At this point, you already have a working full-featured serverless API, well done! ðŸŽ‰")]),t._v(" "),s("p",[t._v("NestJS is a very comprehensive framework, and there could be a lot more use-cases to cover for your specific needs. I encourage you to dive into the "),s("a",{attrs:{href:"https://docs.nestjs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("NestJS documentation"),s("OutboundLink")],1),t._v(" to learn more about the techniques and tools you can use.")]),t._v(" "),s("p",[t._v("If you have more time and feel like it, here are some extras points that I found interesting to cover, especially if you want to build enterprise apps.")]),t._v(" "),s("p",[t._v("Note that each of these extra parts is entirely independent, so you can skip to the one you are the most interested in or do them in any order ðŸ˜‰.")]),t._v(" "),s("h2",{attrs:{id:"add-data-validation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#add-data-validation"}},[t._v("#")]),t._v(" Add data validation")]),t._v(" "),s("p",[t._v("It is a best practice to check and validate any data received by an API.\nWhat do you think would happen if you call your story creation endpoint, but without providing data?")]),t._v(" "),s("p",[t._v("Let's try!")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" http://localhost:7071/api/stories -X POST -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n")])])]),s("p",[t._v("Whoops! A new story is created, but with our entity properties are left empty ðŸ˜±.")]),t._v(" "),s("p",[t._v("We might want to make sure a new story has its "),s("code",[t._v("animal")]),t._v(" field set and either a "),s("code",[t._v("description")]),t._v(" or an image provided.")]),t._v(" "),s("p",[t._v("Nest.js provides a built-in "),s("code",[t._v("ValidationPipe")]),t._v(" that enforces validation rules for received data payloads, thanks to annotations provided by the "),s("a",{attrs:{href:"https://github.com/typestack/class-validator",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("class-validator")]),s("OutboundLink")],1),t._v(" package.")]),t._v(" "),s("p",[t._v("To use it, you have to create a DTO ("),s("a",{attrs:{href:"https://en.wikipedia.org/wiki/Data_transfer_object",target:"_blank",rel:"noopener noreferrer"}},[t._v("Data Transfer Object"),s("OutboundLink")],1),t._v(") class on which you will declare the validations rules using annotations.")]),t._v(" "),s("p",[t._v("First, you need to install the required packages:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" class-validator class-transformer\n")])])]),s("p",[t._v("Then create the file "),s("code",[t._v("src/stories/story.dto.ts")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StoryDto")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsNotEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  animal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsOptional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  \n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsOptional")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  createdAt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("It looks like a lot like our "),s("code",[t._v("Story")]),t._v(" entity, but this time you define only properties that are expected in the request payload. That's why there is no "),s("code",[t._v("imageUrl")]),t._v(" property here: it will be set by the controller only if an image file is uploaded.")]),t._v(" "),s("p",[t._v("The annotations "),s("code",[t._v("@IsNotEmpty()")]),t._v(" and "),s("code",[t._v("@IsOptional()")]),t._v(" describe which property can be omitted and which one can be set in the payload. You can see the complete list of provided decorators "),s("a",{attrs:{href:"https://github.com/typestack/class-validator#validation-decorators",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("p",[t._v("Now open "),s("code",[t._v("src/stories/stories.controller.ts")]),t._v(" and change the type of the "),s("code",[t._v("data")]),t._v(" parameter of your "),s("code",[t._v("POST")]),t._v(" function to "),s("code",[t._v("StoryDto")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createStory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Body")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" StoryDto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("UploadedFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UploadedFileMetadata"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Promise")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("Story"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n")])])]),s("p",[t._v("Finally open "),s("code",[t._v("src/main.azure.ts")]),t._v(" and enable "),s("code",[t._v("ValidationPipe")]),t._v(" at the application level, to ensure all endpoints gets data validation:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" NestFactory"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("AppModule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setGlobalPrefix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'api'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\napp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("useGlobalPipes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ValidationPipe")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Start your server with "),s("code",[t._v("npm run start:azure")]),t._v(" and run the previous "),s("code",[t._v("curl")]),t._v(" command again. This time you should properly receive an HTTP error "),s("code",[t._v("400")]),t._v(" (bad request).")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("Pro tip")]),t._v(" "),s("p",[t._v("By default, detailed error messages will be automatically generated in case of a validation error. You also specify custom error message in the decorator options, for example:")]),t._v(" "),s("div",{staticClass:"language-ts extra-class"},[s("pre",{pre:!0,attrs:{class:"language-ts"}},[s("code",[t._v("@"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("IsNotEmpty")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" message"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animal must not be empty'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nanimal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("You also use special tokens in your error message or use a function for better granularity. See the "),s("a",{attrs:{href:"https://github.com/typestack/class-validator#validation-messages",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("class-validator")]),t._v(" documentation"),s("OutboundLink")],1),t._v(" for more details.")])]),t._v(" "),s("p",[t._v("What about our other constraint, which is to have either a "),s("code",[t._v("description")]),t._v(" or an image file provided?")]),t._v(" "),s("p",[t._v("Since the "),s("code",[t._v("imageUrl")]),t._v(" information is not directly part of the DTO, we cannot use it for validation. As the "),s("code",[t._v("imageUrl")]),t._v(" property is set in the controller, that's where you have to perform manual validation. You can use the "),s("a",{attrs:{href:"https://github.com/typestack/class-validator#manual-validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("manual validation methods"),s("OutboundLink")],1),t._v(" of the "),s("code",[t._v("class-validator")]),t._v(" package for that.")]),t._v(" "),s("p",[t._v("This time, it's your turn to finish the job!")]),t._v(" "),s("ul",[s("li",[t._v("Ensure that either "),s("code",[t._v("description")]),t._v(" or "),s("code",[t._v("imageUrl")]),t._v(" is not empty, using manual validation.")]),t._v(" "),s("li",[t._v("Ensure that "),s("code",[t._v("description")]),t._v(" length is at most 240 characters.")]),t._v(" "),s("li",[t._v("Ensure that "),s("code",[t._v("animal")]),t._v(" is either set to "),s("code",[t._v("cat")]),t._v(", "),s("code",[t._v("doc")]),t._v(" or "),s("code",[t._v("hamster")]),t._v(" using annotations.")]),t._v(" "),s("li",[t._v("Ensure that "),s("code",[t._v("createdAt")]),t._v(" is a date if provided, using annotations.")])]),t._v(" "),s("p",[t._v("You can read more on data validation techniques in the "),s("a",{attrs:{href:"https://docs.nestjs.com/techniques/validation",target:"_blank",rel:"noopener noreferrer"}},[t._v("NestJS documentation"),s("OutboundLink")],1),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"enable-cors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#enable-cors"}},[t._v("#")]),t._v(" Enable CORS")]),t._v(" "),s("p",[t._v("If you try to access your API inside a web application from your browser, you might encounter an error like that one:")]),t._v(" "),s("p",[s("img",{attrs:{src:a(220),alt:"CORS error"}})]),t._v(" "),s("p",[t._v("This error occurs because browsers block HTTP requests from scripts to web domains different than the one of the current web page to improve security.")]),t._v(" "),s("p",[t._v("To bypass this restriction, your server must define specific HTTP headers to allow it. This mechanism is called "),s("a",{attrs:{href:"https://developer.mozilla.org/docs/Web/HTTP/CORS",target:"_blank",rel:"noopener noreferrer"}},[t._v("Cross-Origin Resource Sharing"),s("OutboundLink")],1),t._v(" (CORS).")]),t._v(" "),s("p",[t._v("CORS is already enabled by default on Azure Functions but you must add your website domain to the list of allowed origins using this command:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# Don't forget to change the name and URL with your own\n$ az functionapp cors add \\\n    --name funpets-api \\\n    --resource-group funpets \\\n    --allowed-origins https://yourwebsite.com\n")])])]),s("p",[t._v("If you want to allow any website to use your API, you can replace the website URL by using "),s("code",[t._v("*")]),t._v(" instead. In that case, be careful as Azure Functions will auto-scale to handle the workload if millions of users starts using it, but so will your bill!")]),t._v(" "),s("h2",{attrs:{id:"set-authorization-level"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-authorization-level"}},[t._v("#")]),t._v(" Set authorization level")]),t._v(" "),s("p",[t._v("By default, all Azure Functions triggered by HTTP are publicly available. It's useful for a lot of scenarios, but at some point you might want to restrict who can execute your functions, in our case your API.")]),t._v(" "),s("p",[t._v("Open the file "),s("code",[t._v("main/function.json")]),t._v(". In the functions, bindings, notice that "),s("code",[t._v("authLevel")]),t._v(" is set to "),s("code",[t._v("anonymous")]),t._v(". It can be set to one of these 3 values:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("anonymous")]),t._v(": no API key is required (default).")]),t._v(" "),s("li",[s("code",[t._v("function")]),t._v(": an API key specific to this function is required. If none is defined, the "),s("code",[t._v("default")]),t._v(" one will be used.")]),t._v(" "),s("li",[s("code",[t._v("admin")]),t._v(": an host API key is required. It will be shared among all functions from the same app.")])]),t._v(" "),s("p",[t._v("Now change "),s("code",[t._v("authLevel")]),t._v(" to "),s("code",[t._v("function")]),t._v(", and redeploy your function:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't forget to change the name with the one you used previously")]),t._v("\nfunc azure functionapp publish funpets-api --nozip\n")])])]),s("p",[t._v("Then try to invoke again your API:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-funpets-api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".azurewebsites.net/api/stories -i\n")])])]),s("p",[t._v("You should get an HTTP status "),s("code",[t._v("401")]),t._v(" error ("),s("code",[t._v("Unauthorized")]),t._v(").")]),t._v(" "),s("p",[t._v("To call a protected function, you need to either provide the key as a query string parameter in the form "),s("code",[t._v("code=<api_key>")]),t._v(" or you can provide it with the HTTP header "),s("code",[t._v("x-functions-key")]),t._v(".")]),t._v(" "),s("p",[t._v("You can either log in to "),s("a",{attrs:{href:"https://portal.azure.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("portal.azure.com"),s("OutboundLink")],1),t._v(" and go to your function app, or follow these steps to retrieve your function API keys:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[t._v("// Retrieve your resource ID\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't forget to change the name with the one you used previously")]),t._v("\naz functionapp show --resource-group funpets "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                    --name funpets-api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n                    --query "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("id")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Use the resource ID from the previous command")]),t._v("\naz rest --method post --uri "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<resource_id>/host/default/listKeys?api-version=2018-11-01"')]),t._v("\n")])])]),s("p",[t._v("You should see something like that:")]),t._v(" "),s("div",{staticClass:"language-json extra-class"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"functionKeys"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"default"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"functionApiKey=="')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"masterKey"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"masterApiKey=="')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token property"}},[t._v('"systemKeys"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Then try to invoke again your API, this time with the "),s("code",[t._v("x-functions-key")]),t._v(" header set with your function API key:")]),t._v(" "),s("div",{staticClass:"language-sh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sh"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("curl")]),t._v(" https://"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("your-funpets-api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".azurewebsites.net/api/stories -i "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  -H "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x-functions-key: <your_function_api_key>"')]),t._v("\n")])])]),s("p",[t._v("This time the call should succeed!")]),t._v(" "),s("p",[t._v("Using authorization level you can restrict who can call your API, this can be useful especially for service-to-service access restrictions.")]),t._v(" "),s("p",[t._v("However, if you need to manage finely who can access your API with an endpoint granularity, you need to implement "),s("a",{attrs:{href:"https://docs.nestjs.com/techniques/authentication",target:"_blank",rel:"noopener noreferrer"}},[t._v("authentication"),s("OutboundLink")],1),t._v(" in your app.")]),t._v(" "),s("h2",{attrs:{id:"write-tests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#write-tests"}},[t._v("#")]),t._v(" Write tests")]),t._v(" "),s("p",[t._v("Automated testing is a fundamental requirement to develop robust software applications. It helps catching bugs early, preventing regressions and ensuring that production releases meet your quality and performance goals.")]),t._v(" "),s("p",[t._v("TODO:")]),t._v(" "),s("p",[t._v("https://docs.nestjs.com/fundamentals/testing")])])}),[],!1,null,null,null);e.default=n.exports}}]);